generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  TUTOR
  STUDENT
}

model User {
  id            Int              @id @unique @default(autoincrement())
  email         String           @unique
  birthdate     DateTime?
  name          String
  lastname      String
  surname       String?
  accessTokens  AccessToken[]
  courses       Course[]
  queuedCourses Course[]         @relation("queued")
  vkId          Int              @unique
  role          Role             @default(STUDENT)
  avatar        String           @default("https://vk.com/images/camera_50.png")
  documents     DocumentUpload[]
}

model AccessToken {
  id     Int    @id @unique @default(autoincrement())
  token  String @unique
  user   User   @relation(fields: [userId], references: [id])
  userId Int
}

model DocumentUpload {
  id       Int    @id @unique @default(autoincrement())
  user     User   @relation(fields: [userId], references: [id])
  course   Course @relation(fields: [courseId], references: [id])
  name     String
  key      String
  userId   Int
  courseId Int
}

enum Icon {
  PROJECTS
  PROGRAMMING
  MODELLING
}

model Course {
  id                Int              @id @unique @default(autoincrement())
  name              String
  people            Int
  description       String
  tutor             String
  age               String           @default("14-18 лет")
  place             String
  icon              Icon             @default(PROJECTS)
  users             User[]
  queuedUsers       User[]           @relation("queued")
  schedule          String           @default("Понедельник, среда, пятница - 15:00")
  requiredDocuments String[]         @default(["Согласие на обработку персональных данных"])
  documents         DocumentUpload[]
}
